{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/idea",
    "result": {"data":{"markdownRemark":{"html":"<ul>\n<li>要有刨根问底的精神</li>\n<li>多思考这件事为什么是这样</li>\n<li>提取事物相同的模式 从更上层或者多角度去看相似的问题</li>\n<li>有深度的刻意练习才能产生提高</li>\n<li>做技术 可以从技术角度去产生技术方案也可以从用户产品视角去思考技术 不要把这两个孤立开来</li>\n</ul>\n<h2>跨端的本质</h2>\n<p>一句话概括: 如何技术手段以较低成本和较高的稳定性实现端业务的快速发展\n在讨论具体的跨端方案时，先看几个在选择跨端方案的场景</p>\n<table>\n<thead>\n<tr>\n<th>目标</th>\n<th>考量点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>动态化</td>\n<td>1. 包体积问题是一个app发展到一定阶段必定要考量的问题，也是一些大厂在内部推动跨端方案的一个核心诉求 2. 业务动态化诉求(快速迭代/动态更新)</td>\n</tr>\n<tr>\n<td>人效</td>\n<td>跨端方案可以实现一次开发多端使用，提升人效 1. 原生能力需要端接入或者端技术能力，长期需要多端技术能力 2. 多端展现存在差异，需要开发中磨平 3. 通常说跨端都从h5(动态化技术)的视角切入，h5和native不是非此即彼的关系，事是大家的</td>\n</tr>\n<tr>\n<td>性能</td>\n<td>技术方案存在性能瓶颈，通过其他技术方案可以解决性能问题，优化业务体验</td>\n</tr>\n<tr>\n<td>技术基建能力</td>\n<td>1. 技术储备 2. 业务在不同技术方案下探索(小程序)</td>\n</tr>\n</tbody>\n</table>\n<h2>react理念(特点)</h2>\n<ul>\n<li>\n<p>数据驱动视图，MVVM框架</p>\n</li>\n<li>\n<p>虚拟Dom，可以实现多平台renderer和渲染优化</p>\n</li>\n<li>\n<p>组件化思维，更好的抽象/组合/代码复用</p>\n</li>\n<li>\n<p>函数式编程</p>\n</li>\n</ul>","frontmatter":{"date":"2020-12-21","path":"/idea","title":"想法片段总结"}}},"pageContext":{"readingTime":"3 min read"}},
    "staticQueryHashes": []}