{"componentChunkName":"component---src-templates-post-js","path":"/js-scroll","result":{"data":{"markdownRemark":{"html":"<h2>简介</h2>\n<p>在不同的场景下,需要页面实现不同的滚动效果例如滚动到最底部、滚动到最顶部。以下首先对滚动的几个基本的属性进行总结并给出实现滚动的一些方案</p>\n<h2>基础属性简介</h2>\n<p>当元素的子元素比元素高且overflow=scroll时,元素会scroll.此时移动滚动条出触发本元素的scroll事件</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th align=\"center\">定义</th>\n<th align=\"right\">操作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>clientHeight</td>\n<td align=\"center\">与元素的高度有关,代表元素的高度加上padding(不包括border、水平滚动条的高度、margin),对于inline元素该属性的值为0</td>\n<td align=\"right\">只读</td>\n</tr>\n<tr>\n<td>clientWidth</td>\n<td align=\"center\">与clientHeight相似</td>\n<td align=\"right\">只读</td>\n</tr>\n<tr>\n<td>offsetHeight</td>\n<td align=\"center\">与元素的高度有关,不同于clientHeight,它包括border、水平滚动条的高度,不包括margin.对于inline元素该属性为0</td>\n<td align=\"right\">只读</td>\n</tr>\n<tr>\n<td>offsetWidth</td>\n<td align=\"center\">与offsetWidth相似</td>\n<td align=\"right\">只读</td>\n</tr>\n<tr>\n<td>scrollHeight</td>\n<td align=\"center\">当出现滚动时,scrollHeight代表元素内容的高度(包括在不在内容区域的内容)  当一个元素出现滚动, 它的相关属性 判读元素是否滚动到底部 scrollHeight - scrollTop === clientHeight</td>\n<td align=\"right\">只读</td>\n</tr>\n<tr>\n<td>scrollTop</td>\n<td align=\"center\">当元素出现滚动的时候,scrollTop代表元素可见内容距离该元素顶部的高度.不存在滚动条的时候,scrollTop为0</td>\n<td align=\"right\">可读可写</td>\n</tr>\n<tr>\n<td>offsetTop</td>\n<td align=\"center\">获取当前元素跟offsetParent父元素顶部(position不为static的父元素)的距离</td>\n<td align=\"right\">只读</td>\n</tr>\n</tbody>\n</table>\n<h2>实现滚动的几种思路</h2>\n<p>在实现滚动上首先要确定的一个点是你需要知道此刻这个元素的子元素已经绘制完成(高度确定)。比如在react的项目中可以在didUpdate中触发元素的scroll事件,下面介绍下实现滚动的几种方法:</p>\n<ol>\n<li>锚点 通过在页面中设置锚点能在实现跳转到页面相应位置的目的,这种方式也比较好操作.缺点是需要在url中添加其他信息</li>\n<li>offsetTop, scrollTop</li>\n</ol>\n<ul>\n<li>offsetTop 可以在页面隐藏一个元素 通过获取这个元素的offsetTop来设置滚动元素的scrollTop</li>\n<li>scrollTop 直接设置scrollTop来实现定位 当scrollTop设置的值超出元素的最大值(scrollHeight) 会被设置成最大值(定位到最底部)</li>\n</ul>\n<ol start=\"3\">\n<li>scrollIntoView(alignToTop)</li>\n</ol>\n<ul>\n<li>alignToTop默认是true 通过item.scrollIntoView()/item.scrollIntoView(true)会使元素的顶部跟可视区域的顶部对齐</li>\n<li>item.scrollIntoView(false)会使元素的底部跟可视区域的底部对齐</li>\n</ul>","frontmatter":{"date":"2018-08-26","path":"/js-scroll","title":"页面滚动"}}},"pageContext":{"readingTime":"4 min read"}},"staticQueryHashes":[]}