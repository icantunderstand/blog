{"version":3,"sources":["webpack://noodes-personal-blog/./src/components/adComponent.js","webpack://noodes-personal-blog/./src/templates/categoryDetail.js"],"names":["AdComponent","React","async","src","crossorigin","useStyles","createStyles","theme","content","display","flexDirection","justifyContent","alignItems","paddingBottom","footer","height","PAGE_SIZE","INIT_PAGE_NUM","Template","_ref","data","pageContext","meta","totalCount","edges","allMarkdownRemark","pageNum","setPageNum","useState","classes","totalPage","Math","ceil","initIndex","endIndex","dateToRender","slice","AppShell","padding","header","PageHeader","styles","root","backgroundColor","colorScheme","colors","dark","gray","main","paddingTop","Footer","className","Pagination","total","page","onChange","map","edge","_edge$node","_edge$node2","path","title","date","summary","tags","node","frontmatter","id","Link","key","to","ArticleCard"],"mappings":"+IAQA,IALoBA,IAChBC,gBAAA,UAAQC,OAAK,EAACC,IAAI,gGACjBC,YAAY,a,+KCUjB,MAAMC,GAAYC,QAAcC,IAAK,CACnCC,QAAS,CACPC,QAAS,OACTC,cAAe,SACfC,eAAgB,aAChBC,WAAY,SACZC,cAAe,IAEjBC,OAAQ,CACNC,OAAQ,GACRN,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,cAIVI,EAAY,EACZC,EAAgB,EAEP,SAASC,EAAQC,GAA+B,IAA9B,KAAEC,EAAI,YAAEC,EAAc,CAAE,GAAGF,EAC1D,MAAM,KAAEG,GAASD,GACX,WAAEE,EAAU,MAAEC,EAAQ,KAAOJ,aAAI,EAAJA,EAAMK,oBAAqB,CAAED,MAAO,KACjE,EAAEE,EAAQ,EAACC,IAAeC,cAASX,IACnC,QAAEY,GAAYxB,IACdyB,EAAYC,KAAKC,KAAKT,EAAaP,GACnCiB,GAAaP,EAAU,GAAKV,EAC5BkB,EAAWR,EAAUV,EACrBmB,EAAeX,EAAMY,MAAMH,EAAWC,GAC5C,OACEjC,gBAACoC,IAAQ,CACLC,QAAQ,KACRC,OAAQtC,gBAACuC,IAAU,MACnBC,OAASlC,IAAK,CACZmC,KAAM,CAAEC,gBAAuC,SAAtBpC,EAAMqC,YAAyBrC,EAAMsC,OAAOC,KAAK,GAAKvC,EAAMsC,OAAOE,KAAK,IACjGC,KAAM,CAAEC,WAAY,MAEtBnC,OAAQb,gBAACiD,IAAM,KACbjD,gBAAA,OAAKkD,UAAWtB,EAAQf,QACtBb,gBAACmD,IAAU,CACTC,MAAOvB,EACPwB,KAAM5B,EACN6B,SAAWD,IAAU3B,EAAW2B,EAAK,OAK7CrD,gBAAA,OAAKkD,UAAWtB,EAAQrB,SACtBP,gBAAA,OAAKkD,UAAU,aACblD,gBAAA,OACEkD,UAAU,qBAEP7B,EAAOrB,gBAAA,WAAMqB,GAAc,KAC7BC,EAAa,EAAI,eAAiBY,EAAaqB,KAAIC,IAAS,IAADC,EAAAC,EAC1D,MAAM,KAAEC,EAAI,MAAEC,EAAK,KAAEC,EAAI,QAAEC,EAAO,KAAEC,IAAUP,SAAU,QAANC,EAAJD,EAAMQ,YAAI,IAAAP,OAAN,EAAJA,EAAYQ,cAAe,CAAC,EACpEC,EAAKV,SAAU,QAANE,EAAJF,EAAMQ,YAAI,IAAAN,OAAN,EAAJA,EAAYQ,GACvB,OAAOlE,gBAACmE,OAAI,CAACC,IAAKF,EAAIG,GAAE,GAAKV,GACzB3D,gBAACsE,IAAW,CACVR,QAASA,EACTC,KAAMA,EACNH,MAAOA,EACPC,KAAMA,IAEH,KAGb7D,gBAACD,IAAW,QAKtB,C","file":"component---src-templates-category-detail-js-ac6713b970da1e1e46f0.js","sourcesContent":["import React from 'react'\n\n\nconst AdComponent = () => (\n    <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8259624032507561\"\n     crossorigin=\"anonymous\" ></script>\n)\n\nexport default AdComponent\n","import React, { useState } from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { \n  AppShell,\n  createStyles,\n  Footer,\n  Pagination\n} from '@mantine/core';\n\nimport AdComponent from \"@components/adComponent\";\nimport PageHeader from '@components/PageHeader';\nimport ArticleCard from '@components/ArticleCard';\n\nimport './style.css'\n\nconst useStyles = createStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    paddingBottom: 70,\n  },\n  footer: {\n    height: 60,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n}));\n\nconst PAGE_SIZE = 6;\nconst INIT_PAGE_NUM = 1;\n\nexport default function Template({ data, pageContext = { } }) {\n  const { meta } = pageContext \n  const { totalCount, edges = [] } = data?.allMarkdownRemark || { edges: [] }\n  const [ pageNum, setPageNum ] = useState(INIT_PAGE_NUM)\n  const { classes } = useStyles();\n  const totalPage = Math.ceil(totalCount / PAGE_SIZE)\n  const initIndex = (pageNum - 1) * PAGE_SIZE;\n  const endIndex = pageNum * PAGE_SIZE  \n  const dateToRender = edges.slice(initIndex, endIndex);\n  return (\n    <AppShell\n        padding=\"md\"\n        header={<PageHeader />}\n        styles={(theme) => ({\n          root: { backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.colors.gray[0] },\n          main: { paddingTop: 20 }\n        })}\n        footer={<Footer >\n          <div className={classes.footer}>\n            <Pagination \n              total={totalPage}\n              page={pageNum}\n              onChange={(page)=> { setPageNum(page); }}\n            />\n          </div>\n        </Footer>}\n    >\n      <div className={classes.content}>\n        <div className=\"blog-post\">\n          <div\n            className=\"blog-post-content\"\n          >\n            {!!meta ? <div>{meta}</div> : null}\n            {totalCount < 1 ? '当前分类暂无内容敬请期待' : dateToRender.map(edge => {\n              const { path, title, date, summary, tags, } = edge?.node?.frontmatter || {}\n              const id = edge?.node?.id\n              return <Link key={id} to={`${path}`}>\n                  <ArticleCard \n                    summary={summary}\n                    tags={tags}\n                    title={title}\n                    date={date}\n                  />\n                </Link>\n            })}\n          </div>\n          <AdComponent />\n        </div>\n      </div>\n    </AppShell>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($category: String!) {\n    allMarkdownRemark(\n      filter: {frontmatter: {tags: {eq: $category}}}\n      sort: {order: DESC, fields: frontmatter___date}\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            tags\n            path\n            top\n            summary\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}