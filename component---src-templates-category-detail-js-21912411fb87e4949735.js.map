{"version":3,"file":"component---src-templates-category-detail-js-21912411fb87e4949735.js","mappings":"+IAQA,IALoB,kBAChB,0BAAQA,OAAK,EAACC,IAAI,gGACjBC,YAAY,gB,gKCUXC,GAAYC,EAAAA,EAAAA,IAAa,SAACC,GAAD,MAAY,CACzCC,QAAS,CACPC,QAAS,OACTC,cAAe,SACfC,eAAgB,aAChBC,WAAY,SACZC,cAAe,IAEjBC,OAAQ,CACNC,OAAQ,GACRN,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,cAOD,SAASI,EAAT,GAAgD,IAA5BC,EAA2B,EAA3BA,KAA2B,IAArBC,YAC/BC,QADoD,MAAP,GAAO,GACpDA,KACR,GAAmCF,aAAA,EAAAA,EAAMG,oBAAqB,CAAEC,MAAO,IAA/DC,EAAR,EAAQA,WAAR,IAAoBD,MAAAA,OAApB,MAA4B,GAA5B,EACA,GAAgCE,EAAAA,EAAAA,UALZ,GAKZC,EAAR,KAAiBC,EAAjB,KACQC,EAAYrB,IAAZqB,QACFC,EAAYC,KAAKC,KAAKP,EARZ,GASVQ,EATU,GASGN,EAAU,GACvBO,EAVU,EAUCP,EACXQ,EAAeX,EAAMY,MAAMH,EAAWC,GAC5C,OACE,gBAAC,IAAD,CACIG,QAAQ,KACRC,OAAQ,gBAAC,IAAD,MACRC,OAAQ,SAAC7B,GAAD,MAAY,CAClB8B,KAAM,CAAEC,gBAAuC,SAAtB/B,EAAMgC,YAAyBhC,EAAMiC,OAAOC,KAAK,GAAKlC,EAAMiC,OAAOE,KAAK,IACjGC,KAAM,CAAEC,WAAY,MAEtB9B,OAAQ,gBAAC,IAAD,KACN,uBAAK+B,UAAWnB,EAAQZ,QACtB,gBAAC,IAAD,CACEgC,MAAOnB,EACPoB,KAAMvB,EACNwB,SAAU,SAACD,GAAUtB,EAAWsB,SAKxC,uBAAKF,UAAWnB,EAAQlB,SACtB,uBAAKqC,UAAU,aACb,uBACEA,UAAU,qBAEP1B,EAAO,2BAAMA,GAAc,KAC7BG,EAAa,EAAI,eAAiBU,EAAaiB,KAAI,SAAAC,GAAS,IAAD,IAC1D,GAA8CA,SAAA,UAAAA,EAAMC,YAAN,eAAYC,cAAe,GAAjEC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,QAASC,EAApC,EAAoCA,KAC9BC,EAAKR,SAAH,UAAGA,EAAMC,YAAT,aAAG,EAAYO,GACvB,OAAO,gBAAC,EAAAC,KAAD,CAAMC,IAAKF,EAAIG,GAAE,GAAKR,GACzB,gBAAC,IAAD,CACEG,QAASA,EACTC,KAAMA,EACNH,MAAOA,EACPC,KAAMA,SAKhB,gBAAC,IAAD","sources":["webpack://noodes-personal-blog/./src/components/adComponent.js","webpack://noodes-personal-blog/./src/templates/categoryDetail.js"],"sourcesContent":["import React from 'react'\n\n\nconst AdComponent = () => (\n    <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8259624032507561\"\n     crossorigin=\"anonymous\" ></script>\n)\n\nexport default AdComponent\n","import React, { useState } from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { \n  AppShell,\n  createStyles,\n  Footer,\n  Pagination\n} from '@mantine/core';\n\nimport AdComponent from \"@components/adComponent\";\nimport PageHeader from '@components/PageHeader';\nimport ArticleCard from '@components/ArticleCard';\n\nimport './style.css'\n\nconst useStyles = createStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    paddingBottom: 70,\n  },\n  footer: {\n    height: 60,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n}));\n\nconst PAGE_SIZE = 6;\nconst INIT_PAGE_NUM = 1;\n\nexport default function Template({ data, pageContext = { } }) {\n  const { meta } = pageContext \n  const { totalCount, edges = [] } = data?.allMarkdownRemark || { edges: [] }\n  const [ pageNum, setPageNum ] = useState(INIT_PAGE_NUM)\n  const { classes } = useStyles();\n  const totalPage = Math.ceil(totalCount / PAGE_SIZE)\n  const initIndex = (pageNum - 1) * PAGE_SIZE;\n  const endIndex = pageNum * PAGE_SIZE  \n  const dateToRender = edges.slice(initIndex, endIndex);\n  return (\n    <AppShell\n        padding=\"md\"\n        header={<PageHeader />}\n        styles={(theme) => ({\n          root: { backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.colors.gray[0] },\n          main: { paddingTop: 20 }\n        })}\n        footer={<Footer >\n          <div className={classes.footer}>\n            <Pagination \n              total={totalPage}\n              page={pageNum}\n              onChange={(page)=> { setPageNum(page); }}\n            />\n          </div>\n        </Footer>}\n    >\n      <div className={classes.content}>\n        <div className=\"blog-post\">\n          <div\n            className=\"blog-post-content\"\n          >\n            {!!meta ? <div>{meta}</div> : null}\n            {totalCount < 1 ? '当前分类暂无内容敬请期待' : dateToRender.map(edge => {\n              const { path, title, date, summary, tags, } = edge?.node?.frontmatter || {}\n              const id = edge?.node?.id\n              return <Link key={id} to={`${path}`}>\n                  <ArticleCard \n                    summary={summary}\n                    tags={tags}\n                    title={title}\n                    date={date}\n                  />\n                </Link>\n            })}\n          </div>\n          <AdComponent />\n        </div>\n      </div>\n    </AppShell>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($category: String!) {\n    allMarkdownRemark(\n      filter: {frontmatter: {tags: {eq: $category}}}\n      sort: {order: DESC, fields: frontmatter___date}\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            tags\n            path\n            top\n            summary\n          }\n        }\n      }\n    }\n  }\n`"],"names":["async","src","crossorigin","useStyles","createStyles","theme","content","display","flexDirection","justifyContent","alignItems","paddingBottom","footer","height","Template","data","pageContext","meta","allMarkdownRemark","edges","totalCount","useState","pageNum","setPageNum","classes","totalPage","Math","ceil","initIndex","endIndex","dateToRender","slice","padding","header","styles","root","backgroundColor","colorScheme","colors","dark","gray","main","paddingTop","className","total","page","onChange","map","edge","node","frontmatter","path","title","date","summary","tags","id","Link","key","to"],"sourceRoot":""}